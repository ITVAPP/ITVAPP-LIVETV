name: Generate-i18n-files
# 需要有仓库的写入权限：
# 点击 Settings > Actions > General > Workflow permissions
# 选择 Read and write permissions
# 选择读取和写入权限（默认可能是"读取仓库内容权限"）
# 点击 Save 保存更改
on:
  workflow_dispatch:  # 仅支持手动触发
permissions:
  contents: write  # 授予写权限以推送更改
jobs:
  generate-i18n:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  
      
      - uses: subosito/flutter-action@v2  
        # 设置 Flutter 环境
        with:
          flutter-version: '3.32.0'
          channel: 'stable'
      
      - name: Setup i18n environment  
        # 设置国际化环境
        run: |
          echo "Setting up i18n environment..."
          # 确保 intl 包已经安装
          flutter pub add intl
          # 确保 flutter_localizations 包已经安装在 pubspec.yaml 中
          if ! grep -q "flutter_localizations:" pubspec.yaml; then
            echo "Adding flutter_localizations dependency to pubspec.yaml"
            sed -i '/dependencies:/a \ \ flutter_localizations:\n \ \ \ \ sdk: flutter' pubspec.yaml
          fi
          # 运行 flutter pub get 以确保所有依赖都已安装
          flutter pub get
      
      - name: Verify template files  
        # 验证模板文件
        run: |
          set -e  # 确保命令失败时退出
          
          # 检查固定路径的模板文件
          MISSING_FILES=""
          
          # 创建目录（如果需要）
          mkdir -p lib/l10n
          
          if [ ! -f "lib/l10n/intl_en.arb" ]; then
            MISSING_FILES="$MISSING_FILES lib/l10n/intl_en.arb"
          fi
          
          if [ ! -f "lib/l10n/intl_zh.arb" ]; then
            MISSING_FILES="$MISSING_FILES lib/l10n/intl_zh.arb"
          fi
          
          if [ ! -f "lib/l10n/intl_zh_CN.arb" ]; then
            MISSING_FILES="$MISSING_FILES lib/l10n/intl_zh_CN.arb"
          fi
          
          if [ ! -f "lib/l10n/intl_zh_TW.arb" ]; then
            MISSING_FILES="$MISSING_FILES lib/l10n/intl_zh_TW.arb"
          fi
          
          # 如果缺少任何文件，则退出并提示错误
          if [ -n "$MISSING_FILES" ]; then
            echo "ERROR: The following template files are missing:$MISSING_FILES"
            echo "Please ensure all required template files exist at the specified paths."
            exit 1
          fi
          
          echo "All required template files found."
          echo "Files in lib/l10n:"
          ls -la lib/l10n/
          
          # 创建与示例匹配的l10n.yaml配置，确保输出到lib/generated目录
          echo 'arb-dir: lib/l10n' > l10n.yaml
          echo 'template-arb-file: intl_en.arb' >> l10n.yaml
          echo 'output-class: S' >> l10n.yaml
          echo 'output-dir: lib/generated' >> l10n.yaml
          echo 'output-localization-file: l10n.dart' >> l10n.yaml
          echo 'preferred-supported-locales: ["zh", "zh_CN"]' >> l10n.yaml
          
          echo "Created l10n.yaml with settings matching your example structure"
        shell: bash
      
      - name: Generate localization files  
        # 生成国际化文件
        run: |
          echo "Generating internationalization files..."
          # 使用配置文件中指定的输出位置
          flutter gen-l10n
          
          # 确保目录存在
          mkdir -p lib/generated
          
          # 检查生成结果
          echo "Internationalization files generated successfully."
          echo "Files in lib/generated:"
          ls -la lib/generated/
      
      - name: Stage and commit changes  
        run: |
          echo "Staging changes..."  
          git add pubspec.yaml lib/l10n/ lib/generated/ l10n.yaml
          git status  
          echo "Configuring git identity..."  
          git config --local user.name "ITVAPP"  
          git config --local user.email "actions@itvapp.net"  
          git commit -m "Update i18n files from CI [${{ github.run_id }}]" || echo "Nothing to commit"  
      
      - name: Push changes  
        uses: ad-m/github-push-action@master  
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  
          branch: main
