name: Generate-pubspec.lock

# 需要有仓库的写入权限：
# 点击 Settings > Actions > General > Workflow permissions
# 选择 Read and write permissions
# 选择读取和写入权限（默认可能是“读取仓库内容权限”）
# 点击 Save 保存更改

on:
  workflow_dispatch:  # 仅支持手动触发

permissions:
  contents: write  # 授予写权限以推送更改

jobs:
  update-pubspec-lock:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4  
        # 检出代码
      
      - uses: subosito/flutter-action@v2  
        # 设置 Flutter 环境
        with:
          flutter-version: '3.24.0'
          channel: 'stable'
      
      - name: Update pubspec.lock  
        # 更新 pubspec.lock，基于现有 pubspec.yaml，添加详细调试信息
        run: |
          echo "Cleaning Pub cache to ensure fresh dependency resolution..."
          # 清理 Pub 缓存，防止使用旧版本
          flutter pub cache clean
          
          echo "Removing existing pubspec.lock to force full dependency resolution..."
          # 删除旧的 pubspec.lock，确保不基于旧版本进行增量更新
          rm -f pubspec.lock
          
          echo "Running flutter pub get to generate pubspec.lock..."
          # 使用 flutter pub get 而非 flutter pub upgrade，确保严格遵循 pubspec.yaml 的版本约束
          flutter pub get > pub_get_log.txt 2>&1 || { echo "flutter pub get failed"; cat pub_get_log.txt; exit 1; }
          
          [ -f pubspec.lock ] || { echo "pubspec.lock not generated"; exit 1; }  
          # 检查 pubspec.lock 是否生成，如果未生成则报错
          
          echo "Checking geolocator_android version in pubspec.lock..."
          # 验证 pubspec.lock 中的 geolocator_android 版本，防止生成错误的版本
          grep "geolocator_android:" pubspec.lock -A 4 || { echo "geolocator_android not found in pubspec.lock"; exit 1; }
          if grep -q "geolocator_android:.*5.0.1+1" pubspec.lock; then
            echo "Error: pubspec.lock contains incorrect geolocator_android version 5.0.1+1"
            exit 1
          fi
          
          echo "pubspec.lock generated successfully. Content preview:"  
          # 输出提示信息，表示 pubspec.lock 生成成功
          head -n 20 pubspec.lock  
          # 输出前20行，便于检查内容
      
      - name: Stage and commit pubspec.lock  
        # 将 pubspec.lock 添加到暂存区并提交
        run: |
          echo "Staging pubspec.lock..."  
          # 输出提示信息，表示正在暂存 pubspec.lock 文件
          git add pubspec.lock  
          # 将 pubspec.lock 文件添加到暂存区
          git status  
          # 显示暂存区状态，便于确认是否成功暂存
          echo "Configuring git identity..."  
          # 配置用户身份
          git config --local user.name "ITVAPP"  
          # 设置用户名
          git config --local user.email "actions@itvapp.net"  
          # 设置邮箱
          git commit -m "Update pubspec.lock from CI [${{ github.run_id }}]" || echo "Nothing to commit"  
          # 提交更改，如果没有文件更改则输出提示
      
      - name: Push pubspec.lock  
        # 使用 github-push-action 推送更改
        uses: ad-m/github-push-action@master  
        # 使用 GitHub 推送 Action 进行推送
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  
          # 使用 GitHub token 进行认证
          branch: main  
          # 目标分支，根据仓库实际情况替换
